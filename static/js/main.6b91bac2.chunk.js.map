{"version":3,"sources":["components/Spinner.jsx","utils/loadTiles.js","components/Chloropleth.jsx","components/LineChart2.jsx","components/LocalIncidence.jsx","components/Covid19.jsx","utils/loadData.js","components/NavBar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Spinner","style","display","justifyContent","alignItems","height","className","role","colormap","require","MapUpdater","date","indexed_by_date","scale","data","map_loaded","console","log","map","useMap","i","window","_layers","layer","setStyle","feature","fillColor","item","properties","lad19cd","mean","Chloropleth","state","whenReady","setState","nextProps","nextState","this","props","tiles","handleOnClick","min_val","max_val","dmin","dmax","colors","nshades","format","alpha","reverse","number","max_log","Math","sqrt","min_log","num_log","round","portion_of_scale_to_use","getColorScale","onEachLad","lad","a","name","lad19nm","code","bindPopup","on","click","e","MapContainer","zoom","center","GeoJSON","weight","color","fillOpacity","onEachFeature","eventHandlers","add","items","push","backgroundColor","ceil","createColorBar","React","Component","LineChart2","x","y","upper","lower","upper1","y1","lower1","key","labels","datasets","label","fill","lineTension","borderColor","borderWidth","pointRadius","type","tension","options","animation","duration","title","text","fontSize","maintainAspectRatio","annotation","annotations","drawTime","id","mode","scaleID","value","legend","position","plugins","ChartAnnotation","LocalIncidence","lad_data","filter","location","parameter","moment","Covid19","dates","unique_dates","Set","filtered_data","meanArray","min","max","forEach","loadData","LALookupTable","lookup_table","features","getLALookupTable","useState","setTiles","setLad","setDate","useEffect","length","Fragment","onChange","set_to","NavBar","collapsed","handleToggle","classTwo","to","onClick","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.6b91bac2.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Spinner = () => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n      }}\n    >\n      <div className=\"spinner-border text-secondary\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import { features } from \"../assets/Local_Authority_Districts__December_2019__Boundaries_UK_BUC.json\" // Can change to BUC to reduce bundle size\nlet colormap = require('colormap')\n\nfunction getColorScale(dmin,dmax) {\n    dmin=.1\n    dmax = 200\n\n    console.log(\"GCS\")\n\n    let nshades = 4000 ;\n\n    let colors = colormap({\n    colormap: 'magma',\n    nshades: nshades,\n    format: 'hex',\n    alpha: 1\n    }).reverse()\n\n    let scale = function(number){\n\n        if(number>dmax){ number=dmax-1}\n\n        const max_log = Math.sqrt(dmax)\n        const min_log = Math.sqrt(dmin)\n        const num_log = Math.sqrt(number)\n\n\n\n        \n\n        console.log(\"scale\",)\n        let portion_of_scale_to_use = 0.9; // don't go to deep black\n        return(colors[Math.round(portion_of_scale_to_use*nshades*(num_log-min_log)/(max_log-min_log))])\n        \n    }\n    return scale\n}\n\n\n\nfunction loadTiles() {\n    return features\n}\n\n\nfunction getLALookupTable() {\n    let lookup_table = {};\n    \n    features.forEach((item)=>{\n   \n        lookup_table[item.properties.lad19cd] = item.properties.lad19nm\n    })\n    return(lookup_table)\n}\n\n\nexport { loadTiles, getColorScale, getLALookupTable}\n","import React from \"react\";\nimport { MapContainer, GeoJSON, useMap } from \"react-leaflet\";\n\nimport \"leaflet/dist/leaflet.css\";\nimport \"./Chloropleth.css\";\nimport { getColorScale } from \"../utils/loadTiles\";\n\n\n\n\nconst MapUpdater = ({ date, indexed_by_date, data, scale, map_loaded }) => {\n  console.log(\"updating\")\n  const map = useMap()\n\n  window.map = map\n  for (var i in map._layers) {\n\n    const layer = map._layers[i]\n    if (layer.setStyle && layer.feature) {\n      let fillColor = null\n      if (indexed_by_date[date]) {\n        const item = indexed_by_date[date][layer.feature.properties.lad19cd];\n\n        fillColor = typeof item !== \"undefined\" ? scale(item.mean) : \"#ffffff\";\n      }\n      else {\n        fillColor = \"gray\"\n      }\n      layer.setStyle({ 'fillColor': fillColor })\n    }\n\n\n  }\n  return (\n    <div >{date}</div>\n  )\n}\n\n\n\nclass Chloropleth extends React.Component {\n\n  state = {\n    map_loaded: false\n  }\n\n\n  shouldComponentUpdate(nextProps, nextState) {\n\n    // TODO: return false and manually update map for updates\n    return true;\n  }\n\n  whenReady = () => {\n    this.setState({ map_loaded: true });\n    console.log(\"mount\")\n  }\n\n\n  render() {\n    const { tiles, data, indexed_by_date, date, handleOnClick, min_val, max_val } = this.props;\n\n\n\n\n    const scale = getColorScale(min_val, max_val)\n\n    const mapStyle = {\n      fillColor: \"white\",\n      weight: 0.5,\n      color: \"#333333\",\n      fillOpacity: 1,\n    };\n\n    const createColorBar = (dmin, dmax, scale) => {\n\n      const items = [];\n      for (let i = 0; i <= 100; i++) {\n        items.push(\n          <span\n            key={`${i}`}\n            className=\"grad-step\"\n            style={{ backgroundColor: scale(dmin + (i / 100) * (dmax - dmin)) }}\n          ></span>\n        );\n      }\n      items.push(\n        <span key=\"domain-min\" className=\"domain-min\">\n          {Math.ceil(dmin)}\n        </span>\n      );\n      items.push(\n        <span key=\"domain-med\" className=\"domain-med\">\n          {Math.ceil((dmin + dmax) * 0.5)}\n        </span>\n      );\n      items.push(\n        <span key=\"domain-max\" className=\"domain-max\">\n          {Math.ceil(dmax)}\n        </span>\n      );\n\n      return <div>{items}</div>;\n    };\n\n\n\n    const onEachLad = async (lad, layer) => {\n      const name = lad.properties.lad19nm;\n      const code = lad.properties.lad19cd;\n\n      // layer.options.fillColor =\n      //   typeof item !== \"undefined\" ? await colorScale(data, item) : \"#ffffff\";\n\n      layer.bindPopup(`${name} (${code})`);\n      layer.on({\n        click: (e) => handleOnClick(e, code),\n      });\n    };\n\n    return (\n      <div>\n        <MapContainer style={{ height: \"60vh\" }} zoom={5.5} center={[53.5, -3]}>\n\n          <GeoJSON style={mapStyle} data={tiles} onEachFeature={onEachLad} eventHandlers={{\n            add: this.whenReady\n          }} />\n          <MapUpdater date={date} indexed_by_date={indexed_by_date} data={data} scale={scale} map_loaded={this.state.map_loaded} />\n        </MapContainer>\n        <div className=\"gradient\">\n          <center> {createColorBar(min_val, max_val, scale)}</center>\n        </div>\n      </div>\n    );\n\n  }\n};\n\nexport default Chloropleth;\n","import React from \"react\";\n\n\nimport { Line } from \"react-chartjs-2\";\n\nimport * as ChartAnnotation from 'chartjs-plugin-annotation';\n\n\n\nconst LineChart2 = ({ x, y, upper, lower, y1, upper1, lower1, date,lad }) => {\n\n  const key = date+lad;\n  const state = {\n    labels: x,\n    datasets: [\n      {\n        label: \"Predicted incidence\",\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: \"rgba(236, 236, 236, 1)\",\n        borderColor: \"#rgba(236, 236, 236, 1)\",\n        borderWidth: 0,\n        data: upper,\n        pointRadius: 0,\n      },\n      {\n        // label: \"BandTop\",\n        type: \"line\",\n        backgroundColor: \"rgba(236, 236, 236, .4)\",\n        borderColor: \"transparent\",\n        pointRadius: 0,\n        fill: 0,\n        tension: 0,\n        data: upper1,\n        // yAxisID: \"y\",\n        // xAxisID: \"x\",\n      },\n      {\n        // label: \"BandBottom\",\n        type: \"line\",\n        backgroundColor: \"rgba(236, 236, 236, .4)\",\n        borderColor: \"transparent\",\n        pointRadius: 0,\n        fill: 0,\n        tension: 0,\n        data: lower,\n        // yAxisID: \"y\",\n        // xAxisID: \"x\",\n      },\n\n      {\n        label: \"Predicted incidence\",\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: \"rgba(236, 236, 236, 1)\",\n        borderColor: \"#rgba(236, 236, 236, 1)\",\n        borderWidth: 0,\n        data: lower,\n        pointRadius: 0,\n      },\n      {\n        // label: \"BandTop\",\n        type: \"line\",\n        backgroundColor: \"rgba(236, 236, 236, .4)\",\n        borderColor: \"transparent\",\n        pointRadius: 0,\n        fill: 0,\n        tension: 0,\n        data: lower1,\n        // yAxisID: \"y\",\n        // xAxisID: \"x\",\n      },\n      {\n        // label: \"BandBottom\",\n        type: \"line\",\n        backgroundColor: \"rgba(236, 236, 236, .4)\",\n        borderColor: \"transparent\",\n        pointRadius: 0,\n        fill: 0,\n        tension: 0,\n        data: upper,\n        // yAxisID: \"y\",\n        // xAxisID: \"x\",\n      },\n\n      {\n        label: \"Predicted incidence\",\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: \"rgb(235, 122, 52, 1)\",\n        borderColor: \"#ffa500\",\n        borderWidth: 3,\n        data: y,\n        pointRadius: 0,\n      },\n      {\n        // label: \"BandTop\",\n        type: \"line\",\n        backgroundColor: \"rgb(235, 122, 52, 0.5)\",\n        borderColor: \"transparent\",\n        pointRadius: 0,\n        fill: 0,\n        tension: 0,\n        data: upper,\n        // yAxisID: \"y\",\n        // xAxisID: \"x\",\n      },\n      {\n        // label: \"BandBottom\",\n        type: \"line\",\n        backgroundColor: \"rgb(235, 122, 52, 0.5)\",\n        borderColor: \"transparent\",\n        pointRadius: 0,\n        fill: 0,\n        tension: 0,\n        data: lower,\n        // yAxisID: \"y\",\n        // xAxisID: \"x\",\n      },\n    ],\n  };\n\n  console.log(date)\n\n  const options = {\n    animation: {\n      duration: 0\n    },\n    title: {\n      display: true,\n      text: \"Daily incidence\",\n      fontSize: 14,\n      maintainAspectRatio: false,\n    },\n    annotation: {\n      annotations: [\n        {\n          drawTime: \"afterDatasetsDraw\",\n          id: \"hline\",\n          type: \"line\",\n          mode: \"vertical\",\n          scaleID: \"x-axis-0\",\n          value: date,\n          borderColor: \"black\",\n          borderWidth: 1,\n          /*label: {\n            backgroundColor: \"gray\",\n            content: date,\n            enabled: true\n          }*/\n        }\n      ]\n    }\n\n\n    ,\n    legend: {\n      display: false,\n      position: \"bottom\",\n    },\n  }\n  console.log(options)\n\n\n\n  return (\n    <Line plugins={[ChartAnnotation]}\n      data={state}\n      options={options}\n      key={key}\n    />\n  );\n};\n\nexport default LineChart2;\n","import React from \"react\";\n\nimport LineChart2 from \"./LineChart2\";\n\nimport moment from \"moment\";\nfunction LocalIncidence({ data, lad, date, name }) {\n\n  const lad_data = data.filter((item) => item.location === lad)\n  return (<div>\n    <h2>Local incidences</h2>\n    <p className=\"lead\">Local Authority: {name}</p>\n    {/* {lad.data && (\n              <LineChart\n                x={lad.data\n                  .filter((item) => item.parameter === \"lambda\")\n                  .map((item) => moment(item.date).format(\"YYYY-MM-DD\"))}\n                y={lad.data\n                  .filter((item) => item.parameter === \"lambda\")\n                  .map((item) => item.mean)}\n                upper={lad.data\n                  .filter((item) => item.parameter === \"lambda\")\n                  .map((item) => item.upper)}\n                lower={lad.data\n                  .filter((item) => item.parameter === \"lambda\")\n                  .map((item) => item.lower)}\n              />\n            )} */}\n\n    <LineChart2\n     lad={lad}\n      date={date}\n      x={lad_data\n        .filter((item) => item.parameter === \"yhat\")\n        .map((item) => moment(item.date).format(\"YYYY-MM-DD\"))}\n      y={lad_data\n        .filter((item) => item.parameter === \"lambda\")\n        .map((item) => item.mean)}\n      upper={lad_data\n        .filter((item) => item.parameter === \"lambda\")\n        .map((item) => item.upper)}\n      lower={lad_data\n        .filter((item) => item.parameter === \"lambda\")\n        .map((item) => item.lower)}\n      y1={lad_data\n        .filter((item) => item.parameter === \"yhat\")\n        .map((item) => item.mean)}\n      upper1={lad_data\n        .filter((item) => item.parameter === \"yhat\")\n        .map((item) => item.upper)}\n      lower1={lad_data\n        .filter((item) => item.parameter === \"yhat\")\n        .map((item) => item.lower)}\n    />\n\n  </div>\n  );\n}\n\n\nexport default LocalIncidence;\n","import React, { useState, useEffect } from \"react\";\nimport Spinner from \"./Spinner\";\nimport Chloropleth from \"./Chloropleth\";\nimport LocalIncidence from \"./LocalIncidence\";\n\nimport Slider from \"rc-slider\";\n\n\nimport \"rc-slider/assets/index.css\";\n\nimport { loadTiles, getLALookupTable } from \"../utils/loadTiles\";\nimport { loadData } from \"../utils/loadData\";\n\nconst Covid19 = () => {\n  const [data, indexed_by_date, unique_dates, min_val, max_val] = loadData();\n  const LALookupTable = getLALookupTable()\n  const [tiles, setTiles] = useState([]);\n  const [lad, setLad] = useState({\n    lad: \"E08000006\",\n    data: null,\n    scale: null,\n  });\n  const [date, setDate] = useState({\n    date: \"2020-09-01\",\n\n  });\n\n  const handleOnClick = (e, lad) => {\n    setLad({ ...lad, lad, data: null });\n  };\n\n  const handleDateSlider = (e) => {\n    const set_to = unique_dates[e];\n    //console.log(\"date set to \", set_to)\n    setDate({ date: set_to });\n\n\n  };\n\n\n\n  useEffect(() => {\n    if (tiles.length === 0) setTiles(loadTiles());\n\n  }, [lad, date,tiles]);\n\n  return (\n    <React.Fragment>\n      {tiles && tiles.length === 0 ? (\n        <div className=\"row\">\n          <Spinner />\n        </div>\n      ) : (\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <h2>Map</h2>\n              <Chloropleth\n                tiles={tiles}\n                max_val={max_val}\n                min_val={min_val}\n                indexed_by_date={indexed_by_date}\n                date={date.date}\n                scale={date.scale}\n                handleOnClick={handleOnClick}\n              />\n            </div>\n            <div className=\"col-md-6\">\n              <h2>Select date</h2>\n              <p className=\"lead\">Current date: {date.date}</p>\n              <Slider\n                min={0}\n                max={unique_dates && unique_dates.length-1}\n                onChange={handleDateSlider}\n              />\n              <hr />\n\n              <LocalIncidence name={LALookupTable[lad.lad]} date={date.date} lad={lad.lad} data={data} />\n\n            </div>\n          </div>\n        )}\n    </React.Fragment>\n  );\n};\n\nexport default Covid19;\n","import { data } from \"../assets/data_full.json\"\n\nfunction loadData(){\n    const dates = data.map((item) => item.date)\n    const unique_dates = [...new Set(dates)]\n\n    let indexed_by_date = {};\n\n    const filtered_data = data.filter((item) => item.parameter === \"lambda\")\n\n    const meanArray = filtered_data.map((item) => item.mean);\n    const dmin = Math.min(...meanArray);\n    const dmax = Math.max(...meanArray);\n\n\n    filtered_data.forEach((item) => {\n      if (item.parameter === \"lambda\"){\n      if(indexed_by_date[item.date]){\n        indexed_by_date[item.date][item.location] = item\n      }\n      else{\n        indexed_by_date[item.date]={}\n        indexed_by_date[item.date][item.location] = item\n        \n      }\n    }\n    })\n    \n    return([data,indexed_by_date,unique_dates,dmin,dmax]);\n  }\n\n\nexport {loadData}","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nclass NavBar extends Component {\n  state = {\n    collapsed: true,\n  };\n  handleToggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n  render() {\n    const collapsed = this.state.collapsed;\n\n    const classTwo = collapsed\n      ? \"navbar-toggler navbar-toggler-right collapsed\"\n      : \"navbar-toggler navbar-toggler-right\";\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar bg-light transparent-nav\">\n        <div className=\"container\">\n          <NavLink className=\"navbar-brand\" to=\"/\">\n            CovInce\n          </NavLink>\n          <button\n            onClick={this.handleToggle}\n            className={`${classTwo}`}\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarResponsive\"\n            aria-controls=\"navbarResponsive\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {/* <div className={`${classOne}`} id=\"navbarResponsive\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/add-user\">\n                  Add User\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/user-list\">\n                  Userlist\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/status\">\n                  Status\n                </NavLink>\n              </li>\n              {!this.props.user && (\n                <li className=\"nav-item\">\n                  <NavLink className=\"nav-link\" to=\"/register\">\n                    Register\n                  </NavLink>\n                </li>\n              )}\n              {!this.props.user && (\n                <li className=\"nav-item\">\n                  <NavLink className=\"nav-link\" to=\"/login\">\n                    Login\n                  </NavLink>\n                </li>\n              )}\n              {this.props.user && (\n                <React.Fragment>\n                  <li className=\"nav-item\">\n                    <NavLink className=\"nav-link\" to=\"/profile\">\n                      {this.props.user.username}\n                    </NavLink>\n                  </li>\n                  <li className=\"nav-item\">\n                    <NavLink className=\"nav-link\" to=\"/logout\">\n                      Logout\n                    </NavLink>\n                  </li>\n                </React.Fragment>\n              )}\n            </ul>\n          </div> */}\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from 'react';\nimport Covid19 from \"./components/Covid19\"\nimport NavBar from \"./components/NavBar\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <NavBar />\n    <div className=\"container\">\n      \n      <Covid19 />\n    </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nReactDOM.render(<BrowserRouter basename=\"/covid19-web\"><App /></BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}